Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              i2c.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

enDS1307Registers   0x1               i2c.o
lastKey             0x1               keyboard.o
prevKey             0x1               keyboard.o
clock               0x2b              clock.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
LOAD i2c.o
LOAD keyboard.o
LOAD main.o
LOAD led_display.o
LOAD clock.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x5f8
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000084        0x8 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000008c        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
                0x0000008c                __vector_22
                0x0000008c                __vector_1
                0x0000008c                __vector_24
                0x0000008c                __vector_12
                0x0000008c                __bad_interrupt
                0x0000008c                __vector_6
                0x0000008c                __vector_3
                0x0000008c                __vector_23
                0x0000008c                __vector_25
                0x0000008c                __vector_11
                0x0000008c                __vector_13
                0x0000008c                __vector_17
                0x0000008c                __vector_19
                0x0000008c                __vector_7
                0x0000008c                __vector_5
                0x0000008c                __vector_4
                0x0000008c                __vector_9
                0x0000008c                __vector_2
                0x0000008c                __vector_21
                0x0000008c                __vector_15
                0x0000008c                __vector_8
                0x0000008c                __vector_14
                0x0000008c                __vector_10
                0x0000008c                __vector_16
                0x0000008c                __vector_18
                0x0000008c                __vector_20
 .text          0x00000090      0x2f4 i2c.o
                0x00000090                I2C_Init
                0x000000a8                I2C_Write
                0x00000116                I2C_Read
                0x000001cc                I2C_ReadTime
                0x00000288                I2C_DS1307Init
                0x000002e4                I2C_StoreTime
                0x00000332                I2C_StoreDate
                0x0000036a                I2C_StoreYear
 .text          0x00000384       0x44 keyboard.o
                0x00000384                KBD_getKeyCode
                0x000003a0                KBD_readKey
                0x000003b2                KBD_init
 .text          0x000003c8        0xc main.o
                0x000003c8                main
 .text          0x000003d4       0xc8 led_display.o
                0x000003d4                LED_SPI_Init
                0x000003e6                LED_SPI_WriteWord
                0x00000432                LED_Out_Buf
 .text          0x0000049c      0x158 clock.o
                0x0000049c                Clock_Init
                0x0000052c                Clock_Time_To_Buf
                0x00000584                Clock_Buf_To_Time
                0x000005ae                Clock_Date_To_Buf
                0x000005b0                Clock_Buf_To_Date
                0x000005b2                Clock_Year_To_Buf
                0x000005b4                Clock_Buf_To_Year
                0x000005b6                Clock_Cycle
 .text          0x000005f4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x000005f4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000005f4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000005f4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000005f4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000005f4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005f4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x000005f4                _exit
                0x000005f4                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005f4        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000005f8                _etext = .

.data           0x00800100        0x0 load address 0x000005f8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 i2c.o
 .data          0x00800100        0x0 keyboard.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 led_display.o
 .data          0x00800100        0x0 clock.o
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x2e
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o
 .bss           0x00800100        0x0 i2c.o
 .bss           0x00800100        0x0 keyboard.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100        0x0 led_display.o
 .bss           0x00800100        0x0 clock.o
 .bss           0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800100        0x1 i2c.o
                0x00800100                enDS1307Registers
 COMMON         0x00800101        0x2 keyboard.o
                0x00800101                lastKey
                0x00800102                prevKey
 COMMON         0x00800103       0x2b clock.o
                0x00800103                clock
                0x0080012e                PROVIDE (__bss_end, .)
                0x000005f8                __data_load_start = LOADADDR (.data)
                0x000005f8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080012e        0x0
                0x0080012e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080012e                PROVIDE (__noinit_end, .)
                0x0080012e                _end = .
                0x0080012e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 i2c.o
 .debug_aranges
                0x00000020       0x20 keyboard.o
 .debug_aranges
                0x00000040       0x20 main.o
 .debug_aranges
                0x00000060       0x20 led_display.o
 .debug_aranges
                0x00000080       0x20 clock.o

.debug_pubnames
                0x00000000      0x253
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xaa i2c.o
 .debug_pubnames
                0x000000aa       0x5a keyboard.o
 .debug_pubnames
                0x00000104       0x31 main.o
 .debug_pubnames
                0x00000135       0x49 led_display.o
 .debug_pubnames
                0x0000017e       0xd5 clock.o

.debug_info     0x00000000     0x1064
 *(.debug_info)
 .debug_info    0x00000000      0x794 i2c.o
 .debug_info    0x00000794      0x104 keyboard.o
 .debug_info    0x00000898       0xf5 main.o
 .debug_info    0x0000098d      0x259 led_display.o
 .debug_info    0x00000be6      0x47e clock.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x602
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1dd i2c.o
 .debug_abbrev  0x000001dd       0x96 keyboard.o
 .debug_abbrev  0x00000273       0x89 main.o
 .debug_abbrev  0x000002fc      0x142 led_display.o
 .debug_abbrev  0x0000043e      0x1c4 clock.o

.debug_line     0x00000000      0xb57
 *(.debug_line)
 .debug_line    0x00000000      0x4ae i2c.o
 .debug_line    0x000004ae      0x155 keyboard.o
 .debug_line    0x00000603       0x74 main.o
 .debug_line    0x00000677      0x242 led_display.o
 .debug_line    0x000008b9      0x29e clock.o

.debug_frame    0x00000000      0x1c0
 *(.debug_frame)
 .debug_frame   0x00000000       0x90 i2c.o
 .debug_frame   0x00000090       0x40 keyboard.o
 .debug_frame   0x000000d0       0x20 main.o
 .debug_frame   0x000000f0       0x40 led_display.o
 .debug_frame   0x00000130       0x90 clock.o

.debug_str      0x00000000      0x3b8
 *(.debug_str)
 .debug_str     0x00000000      0x1ff i2c.o
                                0x242 (size before relaxing)
 .debug_str     0x000001ff       0x42 keyboard.o
                                 0xff (size before relaxing)
 .debug_str     0x00000241       0x27 main.o
                                0x140 (size before relaxing)
 .debug_str     0x00000268       0x59 led_display.o
                                0x184 (size before relaxing)
 .debug_str     0x000002c1       0xf7 clock.o
                                0x2d2 (size before relaxing)

.debug_loc      0x00000000      0x2f7
 *(.debug_loc)
 .debug_loc     0x00000000      0x1e7 i2c.o
 .debug_loc     0x000001e7       0x34 keyboard.o
 .debug_loc     0x0000021b       0x8c led_display.o
 .debug_loc     0x000002a7       0x50 clock.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(protocol.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000      0x104
 .debug_pubtypes
                0x00000000       0x3c i2c.o
 .debug_pubtypes
                0x0000003c       0x1e keyboard.o
 .debug_pubtypes
                0x0000005a       0x12 main.o
 .debug_pubtypes
                0x0000006c       0x38 led_display.o
 .debug_pubtypes
                0x000000a4       0x60 clock.o
